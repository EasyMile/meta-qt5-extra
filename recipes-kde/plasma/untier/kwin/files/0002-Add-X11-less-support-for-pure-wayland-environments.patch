From f72c60cb99105556969c06a1008c2708b9d07da3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Wed, 10 Dec 2014 17:04:24 +0100
Subject: [PATCH] Add X11-less support for pure wayland environments
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: Pending

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 CMakeLists.txt | 82 ++++++++++++++++++++++++++++++++++------------------------
 1 file changed, 48 insertions(+), 34 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4a3e547..288b072 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -25,7 +25,6 @@ find_package(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED COMPONENTS
     Script
     UiTools
     Widgets
-    X11Extras
 )
 
 find_package(Qt5Test ${QT_MIN_VERSION} CONFIG QUIET)
@@ -150,35 +149,40 @@ set_package_properties(XKB PROPERTIES
 find_package(X11)
 set_package_properties(X11 PROPERTIES DESCRIPTION "X11 libraries"
                         URL "http://www.x.org"
-                        TYPE REQUIRED
+                        TYPE OPTIONAL
                     )
 
-# All the required XCB components
-find_package(XCB
-    REQUIRED COMPONENTS
-        XCB
-        XFIXES
-        DAMAGE
-        COMPOSITE
-        SHAPE
-        SYNC
-        RENDER
-        RANDR
-        KEYSYMS
-        IMAGE
-        SHM
-        XTEST
-        GLX
-    OPTIONAL_COMPONENTS
-        ICCCM
-)
-set_package_properties(XCB PROPERTIES TYPE REQUIRED)
+set(HAVE_X11 ${X11_FOUND})
+
+if(HAVE_X11)
+    find_package(Qt5 ${QT_MIN_VERSION} CONFIG REQUIRED COMPONENTS X11Extras)
+    # All the required XCB components
+    find_package(XCB
+        REQUIRED COMPONENTS
+            XCB
+            XFIXES
+            DAMAGE
+            COMPOSITE
+            SHAPE
+            SYNC
+            RENDER
+            RANDR
+            KEYSYMS
+            IMAGE
+            SHM
+            XTEST
+            GLX
+        OPTIONAL_COMPONENTS
+            ICCCM
+    )
+    set_package_properties(XCB PROPERTIES TYPE REQUIRED)
 
-# and the optional XCB dependencies
-if (XCB_ICCCM_VERSION VERSION_LESS "0.4")
-    set(XCB_ICCCM_FOUND FALSE)
+    # and the optional XCB dependencies
+    if (XCB_ICCCM_VERSION VERSION_LESS "0.4")
+        set(XCB_ICCCM_FOUND FALSE)
+    endif()
+    add_feature_info("XCB-ICCCM" XCB_ICCCM_FOUND "Required for building test applications for KWin")
 endif()
-add_feature_info("XCB-ICCCM" XCB_ICCCM_FOUND "Required for building test applications for KWin")
 
 feature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)
 
@@ -438,9 +442,12 @@ set(kwin_QT_LIBS
     Qt5::DBus
     Qt5::Quick
     Qt5::Script
-    Qt5::X11Extras
 )
 
+if(HAVE_X11)
+    set(kwin_QT_LIBS Qt5::X11Extras)
+endif()
+
 set(kwin_KDE_LIBS
     KF5::ConfigCore
     KF5::CoreAddons
@@ -504,10 +511,15 @@ set(kwinLibs
     ${kwin_OWN_LIBS}
     ${kwin_QT_LIBS}
     ${kwin_KDE_LIBS}
-    ${kwin_XLIB_LIBS}
-    ${kwin_XCB_LIBS}
 )
 
+if(HAVE_X11)
+    set(kwinLibs
+        ${kwin_XLIB_LIBS}
+        ${kwin_XCB_LIBS}
+    )
+endif()
+
 if(HAVE_WAYLAND)
     set(kwinLibs ${kwinLibs} ${kwin_WAYLAND_LIBS})
     if(KWIN_HAVE_EGL AND Wayland_Egl_FOUND)
@@ -537,12 +549,14 @@ elseif(KWIN_BUILD_OPENGLES)
   set_target_properties(kwin PROPERTIES COMPILE_FLAGS "-DKWIN_HAVE_OPENGLES")
 endif()
 
-kf5_add_kdeinit_executable(kwin_x11 main_x11.cpp)
-target_link_libraries(kdeinit_kwin_x11 kwin)
+if(HAVE_X11)
+    kf5_add_kdeinit_executable(kwin_x11 main_x11.cpp)
+    target_link_libraries(kdeinit_kwin_x11 kwin)
 
-install(TARGETS kwin             ${INSTALL_TARGETS_DEFAULT_ARGS} LIBRARY NAMELINK_SKIP )
-install(TARGETS kdeinit_kwin_x11 ${INSTALL_TARGETS_DEFAULT_ARGS} )
-install(TARGETS kwin_x11         ${INSTALL_TARGETS_DEFAULT_ARGS} )
+    install(TARGETS kwin             ${INSTALL_TARGETS_DEFAULT_ARGS} LIBRARY NAMELINK_SKIP )
+    install(TARGETS kdeinit_kwin_x11 ${INSTALL_TARGETS_DEFAULT_ARGS} )
+    install(TARGETS kwin_x11         ${INSTALL_TARGETS_DEFAULT_ARGS} )
+endif()
 
 if(HAVE_WAYLAND)
     kf5_add_kdeinit_executable(kwin_wayland main_wayland.cpp)
-- 
1.8.3.1

