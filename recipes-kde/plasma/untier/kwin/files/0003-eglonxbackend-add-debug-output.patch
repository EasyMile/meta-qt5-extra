From 2583a42b1c289bc117779bb4037ed5c90773cbf7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Mon, 1 Jun 2015 13:59:38 +0200
Subject: [PATCH] eglonxbackend: add debug output
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 eglonxbackend.cpp | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/eglonxbackend.cpp b/eglonxbackend.cpp
index 1e78f46..c844515 100644
--- a/eglonxbackend.cpp
+++ b/eglonxbackend.cpp
@@ -175,10 +175,13 @@ bool EglOnXBackend::initRenderingContext()
     // Use eglGetPlatformDisplayEXT() to get the display pointer
     // if the implementation supports it.
     const bool havePlatformBase = hasClientExtension(QByteArrayLiteral("EGL_EXT_platform_base"));
+    qCDebug(KWIN_CORE) << "initRenderingContext: havePlatformBase = " << havePlatformBase;
     if (havePlatformBase) {
         // Make sure that the X11 platform is supported
-        if (!hasClientExtension(QByteArrayLiteral("EGL_EXT_platform_x11")))
+        if (!hasClientExtension(QByteArrayLiteral("EGL_EXT_platform_x11"))) {
+            qCCritical(KWIN_CORE) << "initRenderingContext: EGL_EXT_platform_x11 not supported";
             return false;
+        }
 
         const int attribs[] = {
             EGL_PLATFORM_X11_SCREEN_EXT, m_x11ScreenNumber,
@@ -190,8 +193,10 @@ bool EglOnXBackend::initRenderingContext()
         dpy = eglGetDisplay(m_x11Display);
     }
 
-    if (dpy == EGL_NO_DISPLAY)
+    if (dpy == EGL_NO_DISPLAY) {
+        qCCritical(KWIN_CORE) << "initRenderingContext: no display found";
         return false;
+    }
     setEglDisplay(dpy);
     initEglAPI();
 
@@ -216,6 +221,7 @@ bool EglOnXBackend::initRenderingContext()
     }
 #endif
     if (window == XCB_WINDOW_NONE) {
+        qCCritical(KWIN_CORE) << "initRenderingContext: no window";
         return false;
     }
 
@@ -231,6 +237,7 @@ bool EglOnXBackend::initRenderingContext()
     }
 
     if (surface == EGL_NO_SURFACE) {
+        qCCritical(KWIN_CORE) << "initRenderingContext: no surface";
         return false;
     }
     setSurface(surface);
-- 
1.9.3

