From e25d8d40b9189c0400db694b18d104909ef78fe3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Fri, 11 Dec 2015 22:03:01 +0100
Subject: [PATCH] fix configuration/build on x-less systems
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: Inappropriate [configuration]

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 CMakeLists.txt                        | 12 ++++++++----
 backends/CMakeLists.txt               |  6 ++++--
 backends/qscreen/CMakeLists.txt       |  5 ++++-
 src/CMakeLists.txt                    |  5 ++++-
 src/backendlauncher/CMakeLists.txt    |  7 +++++--
 src/backendlauncher/backendloader.cpp | 11 +++++++++--
 6 files changed, 34 insertions(+), 12 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5b6a404..c25cdae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,15 +16,19 @@ include(ECMQtDeclareLoggingCategory)
 include(FeatureSummary)
 include(CheckCXXCompilerFlag)
 
-set(REQUIRED_QT_VERSION 5.2.0)
-find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED Core DBus Gui Test X11Extras)
-
 find_package(XCB COMPONENTS XCB RANDR)
 set_package_properties(XCB PROPERTIES
-                       TYPE REQUIRED
+                       TYPE OPTIONAL
                        PURPOSE "Required for building XRandR backends"
 )
 
+set(REQUIRED_QT_VERSION 5.2.0)
+find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED Core DBus Gui Test)
+if (XCB_FOUND)
+    find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED X11Extras)
+    add_definitions(-DHAVE_XCB)
+endif()
+
 set(KF5_VERSION ${PROJECT_VERSION}) #When we are happy with the api, we can sync with frameworks
 ecm_setup_version(${KF5_VERSION} VARIABLE_PREFIX KSCREEN
                         VERSION_HEADER "${CMAKE_CURRENT_BINARY_DIR}/kscreen_version.h"
diff --git a/backends/CMakeLists.txt b/backends/CMakeLists.txt
index ff5d751..5140984 100644
--- a/backends/CMakeLists.txt
+++ b/backends/CMakeLists.txt
@@ -1,4 +1,6 @@
 add_subdirectory(fake)
 add_subdirectory(qscreen)
-add_subdirectory(xrandr)
-add_subdirectory(xrandr1.1)
+if (XCB_FOUND)
+    add_subdirectory(xrandr)
+    add_subdirectory(xrandr1.1)
+endif()
diff --git a/backends/qscreen/CMakeLists.txt b/backends/qscreen/CMakeLists.txt
index 1342d4f..1a07544 100644
--- a/backends/qscreen/CMakeLists.txt
+++ b/backends/qscreen/CMakeLists.txt
@@ -14,8 +14,11 @@ add_library(KSC_QScreen MODULE ${qscreen_SRCS})
 set_target_properties(KSC_QScreen PROPERTIES PREFIX "")
 target_link_libraries(KSC_QScreen Qt5::Core
                                  Qt5::Gui
-                                 Qt5::X11Extras
                                  KF5::Screen
 )
 
+if (XCB_FOUND)
+    target_link_libraries(KSC_QScreen Qt5::X11Extras)
+endif()
+
 install(TARGETS KSC_QScreen DESTINATION ${PLUGIN_INSTALL_DIR}/kf5/kscreen/)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 4b56b61..6d7fab1 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -27,9 +27,12 @@ target_link_libraries(KF5Screen
     Qt5::Core
     PRIVATE
     Qt5::DBus
-    Qt5::X11Extras
 )
 
+if (XCB_FOUND)
+    target_link_libraries(KF5Screen PRIVATE Qt5::X11Extras)
+endif()
+
 set_target_properties(KF5Screen PROPERTIES
     VERSION "${KSCREEN_VERSION_STRING}"
     SOVERSION "${KSCREEN_SOVERSION}"
diff --git a/src/backendlauncher/CMakeLists.txt b/src/backendlauncher/CMakeLists.txt
index f26ad0e..c933f10 100644
--- a/src/backendlauncher/CMakeLists.txt
+++ b/src/backendlauncher/CMakeLists.txt
@@ -26,10 +26,13 @@ target_link_libraries(kscreen_backend_launcher
     KF5Screen
     Qt5::Core
     Qt5::Gui
-    Qt5::X11Extras
     Qt5::DBus
 )
 
+if (XCB_FOUND)
+    target_link_libraries(kscreen_backend_launcher Qt5::X11Extras)
+endif()
+
 install(TARGETS kscreen_backend_launcher
         DESTINATION ${CMAKE_INSTALL_FULL_LIBEXECDIR_KF5}
 )
@@ -39,4 +42,4 @@ configure_file(org.kde.kscreen.service.cmake
 )
 install(FILES ${CMAKE_CURRENT_BINARY_DIR}/org.kde.kscreen.service
         DESTINATION ${KDE_INSTALL_DBUSSERVICEDIR}
-)
\ No newline at end of file
+)
diff --git a/src/backendlauncher/backendloader.cpp b/src/backendlauncher/backendloader.cpp
index 52051df..a8e53fc 100644
--- a/src/backendlauncher/backendloader.cpp
+++ b/src/backendlauncher/backendloader.cpp
@@ -27,7 +27,9 @@
 #include <QDBusConnectionInterface>
 #include <QDir>
 #include <QPluginLoader>
+#ifdef HAVE_XCB
 #include <QX11Info>
+#endif
 
 #include <memory>
 
@@ -130,6 +132,7 @@ KScreen::AbstractBackend *BackendLoader::loadBackend(const QString &name,
                 continue;
             }
 
+#ifdef HAVE_XCB
             // When on X11, skip the QScreen backend, instead use the XRandR backend,
             // if not specified in KSCREEN_BACKEND
             if (name.isEmpty() &&
@@ -137,12 +140,16 @@ KScreen::AbstractBackend *BackendLoader::loadBackend(const QString &name,
                     QX11Info::isPlatformX11()) {
                 continue;
             }
+#endif
 
             // When not on X11, skip the XRandR backend, and fall back to QSCreen
             // if not specified in KSCREEN_BACKEND
             if (name.isEmpty() &&
-                    finfo.fileName().contains(QLatin1String("KSC_XRandR")) &&
-                    !QX11Info::isPlatformX11()) {
+                    finfo.fileName().contains(QLatin1String("KSC_XRandR"))
+#ifdef HAVE_XCB
+                    && !QX11Info::isPlatformX11()
+#endif
+            ) {
                 continue;
             }
 
-- 
2.5.0

