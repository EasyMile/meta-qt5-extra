From 18833000cc646db37d9006a2766c3be0707377a8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Fri, 29 May 2015 23:49:00 +0200
Subject: [PATCH] fix configuration/build on x-less systems
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: Inappropriate [configuration]

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 CMakeLists.txt                        | 12 ++++++++----
 backends/CMakeLists.txt               |  6 ++++--
 backends/qscreen/CMakeLists.txt       |  5 ++++-
 src/CMakeLists.txt                    |  5 ++++-
 src/backendlauncher/CMakeLists.txt    |  5 ++++-
 src/backendlauncher/backendloader.cpp | 11 +++++++++--
 6 files changed, 33 insertions(+), 11 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index dca5cb4..6121065 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -15,15 +15,19 @@ include(ECMGenerateHeaders)
 include(FeatureSummary)
 include(CheckCXXCompilerFlag)
 
-set(REQUIRED_QT_VERSION 5.2.0)
-find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED Core DBus Gui Test X11Extras)
-
 find_package(XCB COMPONENTS XCB RANDR)
 set_package_properties(XCB PROPERTIES
-                       TYPE REQUIRED
+                       TYPE OPTIONAL
                        PURPOSE "Required for building XRandR backends"
 )
 
+set(REQUIRED_QT_VERSION 5.2.0)
+find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED Core DBus Gui Test)
+if (XCB_FOUND)
+    find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED X11Extras)
+    add_definitions(-DHAVE_XCB)
+endif()
+
 set(KF5_VERSION ${PROJECT_VERSION}) #When we are happy with the api, we can sync with frameworks
 ecm_setup_version(${KF5_VERSION} VARIABLE_PREFIX KSCREEN
                         VERSION_HEADER "${CMAKE_CURRENT_BINARY_DIR}/kscreen_version.h"
diff --git a/backends/CMakeLists.txt b/backends/CMakeLists.txt
index ff5d751..5140984 100644
--- a/backends/CMakeLists.txt
+++ b/backends/CMakeLists.txt
@@ -1,4 +1,6 @@
 add_subdirectory(fake)
 add_subdirectory(qscreen)
-add_subdirectory(xrandr)
-add_subdirectory(xrandr1.1)
+if (XCB_FOUND)
+    add_subdirectory(xrandr)
+    add_subdirectory(xrandr1.1)
+endif()
diff --git a/backends/qscreen/CMakeLists.txt b/backends/qscreen/CMakeLists.txt
index 1342d4f..1a07544 100644
--- a/backends/qscreen/CMakeLists.txt
+++ b/backends/qscreen/CMakeLists.txt
@@ -14,8 +14,11 @@ add_library(KSC_QScreen MODULE ${qscreen_SRCS})
 set_target_properties(KSC_QScreen PROPERTIES PREFIX "")
 target_link_libraries(KSC_QScreen Qt5::Core
                                  Qt5::Gui
-                                 Qt5::X11Extras
                                  KF5::Screen
 )
 
+if (XCB_FOUND)
+    target_link_libraries(KSC_QScreen Qt5::X11Extras)
+endif()
+
 install(TARGETS KSC_QScreen DESTINATION ${PLUGIN_INSTALL_DIR}/kf5/kscreen/)
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 3b73de5..d496140 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -29,9 +29,12 @@ target_link_libraries(KF5Screen
     Qt5::Core
     PRIVATE
     Qt5::DBus
-    Qt5::X11Extras
 )
 
+if (XCB_FOUND)
+    target_link_libraries(KF5Screen PRIVATE Qt5::X11Extras)
+endif()
+
 set_target_properties(KF5Screen PROPERTIES
     VERSION "${KSCREEN_VERSION_STRING}"
     SOVERSION "${KSCREEN_SOVERSION}"
diff --git a/src/backendlauncher/CMakeLists.txt b/src/backendlauncher/CMakeLists.txt
index de73ae1..ddf631f 100644
--- a/src/backendlauncher/CMakeLists.txt
+++ b/src/backendlauncher/CMakeLists.txt
@@ -18,8 +18,11 @@ target_link_libraries(kscreen_backend_launcher
     KF5Screen
     Qt5::Core
     Qt5::Gui
-    Qt5::X11Extras
     Qt5::DBus
 )
 
+if (XCB_FOUND)
+    target_link_libraries(kscreen_backend_launcher Qt5::X11Extras)
+endif()
+
 install(TARGETS kscreen_backend_launcher DESTINATION ${CMAKE_INSTALL_FULL_LIBEXECDIR_KF5})
diff --git a/src/backendlauncher/backendloader.cpp b/src/backendlauncher/backendloader.cpp
index 18e08bc..882d741 100644
--- a/src/backendlauncher/backendloader.cpp
+++ b/src/backendlauncher/backendloader.cpp
@@ -24,7 +24,9 @@
 #include <QDBusConnectionInterface>
 #include <QDir>
 #include <QPluginLoader>
+#ifdef HAVE_XCB
 #include <QX11Info>
+#endif
 
 #include <memory>
 
@@ -74,6 +76,7 @@ bool BackendLoader::loadBackend(const QString& backend)
                 continue;
             }
 
+#ifdef HAVE_XCB
             // When on X11, skip the QScreen backend, instead use the XRandR backend,
             // if not specified in KSCREEN_BACKEND
             if (backend.isEmpty() &&
@@ -81,12 +84,16 @@ bool BackendLoader::loadBackend(const QString& backend)
                     QX11Info::isPlatformX11()) {
                 continue;
             }
+#endif
 
             // When not on X11, skip the XRandR backend, and fall back to QSCreen
             // if not specified in KSCREEN_BACKEND
             if (backend.isEmpty() &&
-                    finfo.fileName().contains(QLatin1String("KSC_XRandR")) &&
-                    !QX11Info::isPlatformX11()) {
+                    finfo.fileName().contains(QLatin1String("KSC_XRandR"))
+#ifdef HAVE_XCB
+                    && !QX11Info::isPlatformX11()
+#endif
+                ) {
                 continue;
             }
 
-- 
1.9.3

