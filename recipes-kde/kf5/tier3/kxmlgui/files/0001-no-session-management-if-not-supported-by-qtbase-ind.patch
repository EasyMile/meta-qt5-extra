From ec4fa422d845e2de33b6392a8fdb4ae76ddcfac2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Wed, 17 Jun 2015 10:49:14 +0200
Subject: [PATCH] no session management if not supported by qtbase - indicated
 by QT_NO_SESSIONMANAGER
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: pending

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 src/kmainwindow.cpp | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/src/kmainwindow.cpp b/src/kmainwindow.cpp
index 7c86841..4035561 100644
--- a/src/kmainwindow.cpp
+++ b/src/kmainwindow.cpp
@@ -119,8 +119,10 @@ bool DockResizeListener::eventFilter(QObject *watched, QEvent *event)
 
 KMWSessionManager::KMWSessionManager()
 {
+#ifndef QT_NO_SESSIONMANAGER
     connect(qApp, SIGNAL(saveStateRequest(QSessionManager&)),
             this, SLOT(saveState(QSessionManager&)));
+#endif
 }
 
 KMWSessionManager::~KMWSessionManager()
@@ -129,6 +131,7 @@ KMWSessionManager::~KMWSessionManager()
 
 bool KMWSessionManager::saveState(QSessionManager &sm)
 {
+#ifndef QT_NO_SESSIONMANAGER
     KConfigGui::setSessionConfig(sm.sessionId(), sm.sessionKey());
 
     KConfig *config = KConfigGui::sessionConfig();
@@ -158,7 +161,7 @@ bool KMWSessionManager::saveState(QSessionManager &sm)
         discard << localFilePath;
         sm.setDiscardCommand(discard);
     }
-
+#endif
     return true;
 }
 
@@ -387,6 +390,9 @@ QMenu *KMainWindow::customHelpMenu(bool showWhatsThis)
 
 bool KMainWindow::canBeRestored(int number)
 {
+#ifdef QT_NO_SESSIONMANAGER
+    return false;
+#else
     if (!qApp->isSessionRestored()) {
         return false;
     }
@@ -398,10 +404,14 @@ bool KMainWindow::canBeRestored(int number)
     KConfigGroup group(config, "Number");
     const int n = group.readEntry("NumberOfWindows", 1);
     return number >= 1 && number <= n;
+#endif
 }
 
 const QString KMainWindow::classNameOfToplevel(int number)
 {
+#ifdef QT_NO_SESSIONMANAGER
+    return QString();
+#else
     if (!qApp->isSessionRestored()) {
         return QString();
     }
@@ -416,10 +426,12 @@ const QString KMainWindow::classNameOfToplevel(int number)
     } else {
         return group.readEntry("ClassName");
     }
+#endif
 }
 
 bool KMainWindow::restore(int number, bool show)
 {
+#ifndef QT_NO_SESSIONMANAGER
     if (!canBeRestored(number)) {
         return false;
     }
@@ -430,6 +442,7 @@ bool KMainWindow::restore(int number, bool show)
         }
         return false;
     }
+#endif
     return false;
 }
 
-- 
1.9.3

