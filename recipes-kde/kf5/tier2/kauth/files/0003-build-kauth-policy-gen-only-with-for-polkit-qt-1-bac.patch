From 053ed2d35ec5085c727b9ab2c1a8025322372beb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Wed, 22 Jul 2015 13:05:17 +0200
Subject: [PATCH 3/3] build kauth-policy-gen only with for polkit-qt-1 backend
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

we need that for native build

Upstream-Status: Inappropriate [embedded specific]

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 CMakeLists.txt            |  4 +++-
 src/CMakeLists.txt        | 12 ++++++++----
 src/ConfigureChecks.cmake | 17 ++++-------------
 3 files changed, 15 insertions(+), 18 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7ad7b42..62a78e6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,7 +10,7 @@ feature_summary(WHAT REQUIRED_PACKAGES_NOT_FOUND FATAL_ON_MISSING_REQUIRED_PACKA
 set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH} ${ECM_KDE_MODULE_DIR})
 
 set(REQUIRED_QT_VERSION 5.4.0)
-find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED Widgets DBus)
+find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED DBus)
 include(KDEInstallDirs)
 include(KDEFrameworkCompilerSettings)
 include(KDECMakeSettings)
@@ -54,6 +54,7 @@ if(AUTOTESTS)
     add_subdirectory(autotests)
 endif()
 
+if(False)
 # create a Config.cmake and a ConfigVersion.cmake file and install them
 set(CMAKECONFIG_INSTALL_DIR "${KDE_INSTALL_CMAKEPACKAGEDIR}/KF5Auth")
 
@@ -86,3 +87,4 @@ install(FILES ${CMAKE_CURRENT_BINARY_DIR}/kauth_version.h
 
 
 feature_summary(WHAT ALL FATAL_ON_MISSING_REQUIRED_PACKAGES)
+endif()
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 1b6930d..23e78b0 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1,5 +1,5 @@
 
-find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED Widgets DBus)
+find_package(Qt5 ${REQUIRED_QT_VERSION} CONFIG REQUIRED DBus)
 
 # This file handles all the logic for compiling KAuth's backends
 include(ConfigureChecks.cmake)
@@ -9,6 +9,7 @@ configure_file(BackendsConfig.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/BackendsConfig
 
 ecm_create_qm_loader(KAuth_QM_LOADER kauth5_qt)
 
+if(False)
 set(libkauth_SRCS
     kauthaction.cpp
     kauthactionreply.cpp
@@ -48,12 +49,13 @@ ecm_generate_headers(KAuth_HEADERS
 
   REQUIRED_HEADERS KAuth_HEADERS
 )
+endif()
 
 # KAuth policy generator executable
 
 # Compile only if fake backend has not been selected
 
-if (NOT "${KAUTH_BACKEND_NAME}" STREQUAL "FAKE")
+#if (NOT "${KAUTH_BACKEND_NAME}" STREQUAL "FAKE")
     # KAUTH_POLICY_GEN_SRCS has been generated from ConfigureChecks.cmake
     add_executable(kauth-policy-gen ${KAUTH_POLICY_GEN_SRCS})
     add_executable(KF5::kauth-policy-gen ALIAS kauth-policy-gen)
@@ -61,9 +63,10 @@ if (NOT "${KAUTH_BACKEND_NAME}" STREQUAL "FAKE")
     # KAUTH_POLICY_GEN_LIBRARIES has been generated from ConfigureChecks.cmake
     target_link_libraries( kauth-policy-gen PRIVATE ${KAUTH_POLICY_GEN_LIBRARIES} )
 
-    install( TARGETS kauth-policy-gen EXPORT KF5AuthToolsTargets DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
-endif ()
+    install( TARGETS kauth-policy-gen DESTINATION ${KAUTH_HELPER_INSTALL_DIR})
+#endif ()
 
+if(False)
 # KAuth backend plugin
 
 if (NOT "${KAUTH_BACKEND_NAME}" STREQUAL "FAKE")
@@ -112,3 +115,4 @@ string(REPLACE "-pedantic" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
 include(ECMGeneratePriFile)
 ecm_generate_pri_file(BASE_NAME KAuth LIB_NAME KF5Auth DEPS "core KCoreAddons" FILENAME_VAR PRI_FILENAME INCLUDE_INSTALL_DIR ${KDE_INSTALL_INCLUDEDIR_KF5}/KAuth)
 install(FILES ${PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR})
+endif()
diff --git a/src/ConfigureChecks.cmake b/src/ConfigureChecks.cmake
index d46761a..48f33a2 100644
--- a/src/ConfigureChecks.cmake
+++ b/src/ConfigureChecks.cmake
@@ -169,19 +169,10 @@ set(KAUTH_POLICY_GEN_SRCS
     policy-gen/policy-gen.cpp )
 set(KAUTH_POLICY_GEN_LIBRARIES)
 
-if(KAUTH_BACKEND_NAME STREQUAL "OSX")
-   set(KAUTH_POLICY_GEN_SRCS ${KAUTH_POLICY_GEN_SRCS}
-       backends/mac/kauth-policy-gen-mac.cpp)
-   set(KAUTH_POLICY_GEN_LIBRARIES ${KAUTH_POLICY_GEN_LIBRARIES} ${CORE_FOUNDATION_LIBRARY} ${SECURITY_LIBRARY} Qt5::Core)
-elseif(KAUTH_BACKEND_NAME STREQUAL "POLKITQT")
-   set(KAUTH_POLICY_GEN_SRCS ${KAUTH_POLICY_GEN_SRCS}
-       backends/policykit/kauth-policy-gen-polkit.cpp )
-elseif(KAUTH_BACKEND_NAME STREQUAL "POLKITQT5-1")
-  set(KAUTH_POLICY_GEN_SRCS ${KAUTH_POLICY_GEN_SRCS}
-      backends/polkit-1/kauth-policy-gen-polkit1.cpp )
-  set(KAUTH_POLICY_GEN_LIBRARIES ${KAUTH_POLICY_GEN_LIBRARIES}
-      Qt5::Core)
-endif()
+set(KAUTH_POLICY_GEN_SRCS ${KAUTH_POLICY_GEN_SRCS}
+    backends/polkit-1/kauth-policy-gen-polkit1.cpp )
+set(KAUTH_POLICY_GEN_LIBRARIES ${KAUTH_POLICY_GEN_LIBRARIES}
+    Qt5::Core)
 
 ########################
 # Helper backend probing
-- 
2.1.0

