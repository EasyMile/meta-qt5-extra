From 987178bf27823f48804f29c57b0d18946e3b6d6b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@googlemail.com>
Date: Thu, 10 Nov 2016 20:10:49 +0100
Subject: [PATCH] autologin: try last successful session if no autologin
 session is set
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

* Have a system here with many sessions and want to autologin the last I used
* On first boot operator can select which session to select for autologin

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@googlemail.com>
---
 src/common/Configuration.h | 2 +-
 src/daemon/Display.cpp     | 8 ++++++--
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/src/common/Configuration.h b/src/common/Configuration.h
index f2e7ae1..44b9c2e 100644
--- a/src/common/Configuration.h
+++ b/src/common/Configuration.h
@@ -91,7 +91,7 @@ namespace SDDM {
 
         Section(Autologin,
             Entry(User,                QString,     QString(),                                  _S("Username for autologin session"));
-            Entry(Session,             QString,     QString(),                                  _S("Name of session file for autologin session"));
+            Entry(Session,             QString,     QString(),                                  _S("Name of session file for autologin session (if empty try last logged in)"));
             Entry(Relogin,             bool,        false,                                      _S("Whether sddm should automatically log back into sessions when they exit"));
         );
     );
diff --git a/src/daemon/Display.cpp b/src/daemon/Display.cpp
index 2c9b0d3..785c941 100644
--- a/src/daemon/Display.cpp
+++ b/src/daemon/Display.cpp
@@ -109,7 +109,11 @@ namespace SDDM {
         Session::Type sessionType = Session::X11Session;
 
         // determine session type
-        const QString &autologinSession = mainConfig.Autologin.Session.get();
+        QString autologinSession = mainConfig.Autologin.Session.get();
+        // not configured: try last successful logged in
+        if (autologinSession.isEmpty()) {
+            autologinSession = stateConfig.Last.Session.get();
+        }
         if (findSessionEntry(mainConfig.X11.SessionDir.get(), autologinSession)) {
             sessionType = Session::X11Session;
         } else if (findSessionEntry(mainConfig.Wayland.SessionDir.get(), autologinSession)) {
@@ -140,7 +144,7 @@ namespace SDDM {
         qDebug() << "Display server started.";
 
         if ((daemonApp->first || mainConfig.Autologin.Relogin.get()) &&
-            !mainConfig.Autologin.User.get().isEmpty() && !mainConfig.Autologin.Session.get().isEmpty()) {
+            !mainConfig.Autologin.User.get().isEmpty()) {
             // reset first flag
             daemonApp->first = false;
 
-- 
2.5.5

